{"version":3,"sources":["styles.js","App.js","serviceWorker.js","index.js"],"names":["styles","Corner","gridArea","background","Sidebar","padding","paddingTop","textAlign","fontSize","fontFamily","Topbar","Clicked","color","Title","paddingLeft","ProfPic","maxWidth","Text","Header","marginTop","fontWeight","Medium","Body","Main","align","App","display","minWidth","minHeight","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","SmallApp","getMainStyle","pageNum","currPage","object","MainStyle","Object","assign","Styles","displayNone","Link","href","this","props","name","react_default","a","createElement","rel","target","Component","createPage","page","index","Style","_this","key","className","style","onClick","updatePage","pages","map","listOfPages","buildList","small","title","_this2","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleHoverChange","setState","state","alt","def","picture","getPicture","onMouseEnter","onMouseLeave","src","Who","linkedIn","App_Link","gitHub","email","App_ProfPic","CV","cs19","cs33","cs32","cs195","cs173","cs147","weibo","bpr","gina","Stuff","width","height","frameBorder","allow","allowFullScreen","allowtransparency","_this3","updateAppWidth","console","log","window","innerWidth","App_Sidebar","App_Title","App_Who","App_CV","App_Stuff","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba441747.chunk.js","sourcesContent":["\nconst Corner = {\n  //Grid positioning\n  gridArea: \"corner\",\n  \n  //Styling\n  background: \"#CE7926\",\n}\n\nconst Sidebar = {\n  //Grid positioning\n  gridArea: \"side\",\n  \n  //Styling\n  padding: \"10%\",\n  paddingTop: \"0\",\n  textAlign: \"right\",\n  fontSize: \"30px\",\n  fontFamily: \"Futura, Times, serif\",\n  background: \"#CE7926\",\n}\n\nconst Topbar = {\n  //Grid positioning\n  gridArea: \"top\",\n  \n  //Styling\n  padding: \"10%\",\n  paddingTop: \"0\",\n  textAlign: \"center\",\n  fontSize: \"35px\",\n  fontFamily: \"Futura, Times, serif\",\n  background: \"#CE7926\",\n}\n\nconst Clicked = {\n  //Styling\n  color: \"#A40705\",\n}\n\n// Title holds our name\nconst Title = {\n  //Grid positioning\n  gridArea: \"title\",\n  \n  //Styling\n  padding: \"0\",\n  paddingTop: \"3%\",\n  paddingLeft: \"3%\",\n  fontSize: \"40px\",\n  fontFamily: \"Futura, Times, serif\",\n}\n\n//My profile picture\nconst ProfPic = {\n  //Styling\n  maxWidth: \"43%\",\n  paddingLeft: \"5%\",\n}\n\n//For section headers\nconst Header = {\n  //Styling\n  marginTop: \"0\",\n  fontSize: \"25px\",\n  fontWeight: \"bold\",\n  fontFamily: \"Futura, Times, serif\",\n}\n\n//Mostly just for the Bio\nconst Medium = {\n  //Styling\n  marginTop: \"0\",\n  fontSize: \"25px\",\n  fontFamily: \"Futura, Times, serif\",\n}\n\n//For smaller body paragraphs\nconst Body = {\n  //Styling\n  paddingLeft: \"2%\",\n  fontSize: \"20px\",\n  fontFamily: \"Futura, Times, serif\",\n}\n\nconst Text = {\n  Header: Header,\n  Medium: Medium,\n  Body: Body,\n}\n\nconst Main = {\n  //Grid positioning\n  gridArea: \"main\",\n  \n  //Styling\n  paddingTop: \"0\",\n  paddingLeft: \"5%\",\n  align: \"left\",\n}\n\n// App wraps the rest of our reactJS page\nconst App = {\n  //Grid positioning\n  display: \"grid\",\n  minWidth: \"100%\",\n  minHeight: \"100vh\",\n  gridTemplateColumns: \"1fr 2fr 1fr\",\n  gridTemplateRows: \"125px .825fr\",\n  gridTemplateAreas: `\n                      'corner title title'\n                      'side main .'\n                     `,              \n}\n\nconst SmallApp = {\n  //Grid positioning\n  display: \"grid\",\n  minWidth: \"100%\",\n  minHeight: \"100vh\",\n  gridTemplateColumns: \"375px\",\n  gridTemplateRows: \"300px 0.25fr 1fr\",\n  gridTemplateAreas: `\n                      'top'\n                      'title'\n                      'main'\n                     `,         \n}\n\nexport default {\n  Corner: Corner,\n  Sidebar: Sidebar,\n  Topbar: Topbar,\n  Clicked: Clicked, \n  Title: Title,\n  ProfPic: ProfPic,\n  Text: Text,\n  Main: Main,\n  App: App,\n  SmallApp: SmallApp,\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Styles from './styles.js';\n\n//Functions for faster preloading\nfunction displayNone(object){\n  Object.assign(object, {display: \"none\"});\n  return object;\n}\n\nfunction displayGrid(object){\n  Object.assign(object, {display: \"grid\"});\n  return object;\n}\n\nfunction getMainStyle(pageNum, currPage){\n  let MainStyle = {};\n  Object.assign(MainStyle, Styles.Main);\n  if(pageNum === currPage){\n    return displayGrid(MainStyle);\n  }else{\n    return displayNone(MainStyle);\n  }\n}\n\n//A custom wrapping for our hyperlinks\nclass Link extends Component {\n  //Get the link, and wrap it in parentheses\n  render() {\n    //Set up link attributes\n    const rel = \"noopener noreferrer\";\n    const target = \"_blank\";\n    const href = this.props.href;\n    const name = this.props.name;\n  \n    return <a rel={rel} target={target} href={href}>{name}</a>;\n  }\n}\n\n\nclass Sidebar extends Component {\n  createPage = (page, index) => {\n    const currPage = this.props.currPage;\n    const Style = (currPage === index) ? Styles.Clicked : null;\n    return(\n      <p \n        key={index}\n        className =\"page\"\n        style={Style}\n        onClick={() => this.props.updatePage(index)}>\n        {page}\n      </p>\n    );\n  }\n  \n  buildList() {\n    const pages = this.props.pages;\n    return pages.map(this.createPage);\n  }\n  \n  render(){\n    const listOfPages = this.buildList();\n    \n    //Handle page resizing \n    //If I did this any more frequently I would create a global context\n    const small = this.props.small;\n    const Style = small ? Styles.Topbar : Styles.Sidebar\n    \n    //Render the sidebar\n    return <div style={Style}>{listOfPages}</div>;\n  }\n}\n\nclass Title extends Component {\n  render() {\n    const title = this.props.title;\n    \n    return(\n      <div style={Styles.Title}>{title}</div>\n    );\n  }\n}\n\n//Displays my profile picture\nclass ProfPic extends Component {\n  //State contains the photo currently displayed\n  constructor(props){\n    super(props);\n    this.state = {\n      alt: false\n    }  \n  }\n  \n  //Handle switching pictures on mouseover\n  handleHoverChange = () => {\n    this.setState(Object.assign(this.state, {alt: !this.state.alt}));\n  }\n  \n  getPicture(){\n    return this.state.alt ? this.props.alt : this.props.def;\n  }\n  \n  render() {\n    const picture = this.getPicture();\n      \n    return(\n      <div \n        style={Styles.ProfPic} \n        onMouseEnter={this.handleHoverChange} \n        onMouseLeave={this.handleHoverChange}>\n        <img src={picture} alt=\"that sure is me!\"></img>\n      </div>\n    );\n  }\n}\n\nclass Who extends Component {\n  render() {\n    \n    //Set up the hyperlink to my LinkedIn\n    const linkedInURL = \"https://www.linkedin.com/in/nicholas-m-252227174/\";\n    const linkedIn = <Link href={linkedInURL} name=\"LinkedIn\" />;\n    \n    //Set up the hyperlink to my GitHub\n    const gitHubURL = \"https://github.com/nktmerch\";\n    const gitHub = <Link href={gitHubURL} name=\"GitHub\"/>;\n    \n    //Set up the hyperlink to my email\n    const emailURL = \"mailto:nicholas_merchant@brown.edu\";\n    const email = <Link href={emailURL} name=\"nicholas_merchant@brown.edu\"/>\n    \n    //Set up my profile photo\n    const defPicture = \"https://raw.githubusercontent.com/nktmerch/cv/master/public/profile_picture.jpg\";\n    const altPicture = \"https://raw.githubusercontent.com/nktmerch/cv/master/public/profile_alt.jpg\";\n    \n    //Get the style\n    const currPage = this.props.currPage;\n    const MainStyle = getMainStyle(0, currPage);\n    \n    return (\n      <div style={MainStyle}>\n        {/*My profile picture*/}\n        <ProfPic def={defPicture} alt={altPicture}/>\n        \n        {/*My Bio*/}\n        <div style={Styles.Text.Medium}>\n          <p>\n            My name is Kiran, I'm a Junior studying Computer Science \n            at Brown University. You can find more information on my \n            ({linkedIn}) page, check out my projects on ({gitHub}), or click\n            one of the links on the side to read more.\n          </p>\n          <p>\n            If you want to get in touch with me for whatever reason, \n            send an email to ({email}).\n          </p>\n          <br></br> \n        </div>  \n      </div>\n    );\n  }\n}\n\nclass CV extends Component {\n  render() {\n\n    //Set up links\n    const cs19URL = \"https://cs.brown.edu/courses/cs019/2017/\";\n    const cs19 = <Link href={cs19URL} name=\"CS19\"/>;\n    \n    const cs33URL = \"http://cs.brown.edu/courses/cs033/\";\n    const cs33 = <Link href={cs33URL} name=\"CS33\"/>;\n    \n    const cs32URL = \"http://cs.brown.edu/courses/cs032/\";\n    const cs32 = <Link href={cs32URL} name=\"CS32\"/>;\n\n    const cs195URL = \"http://cs.brown.edu/courses/cs195y/2019/\";\n    const cs195 = <Link href={cs195URL} name=\"CS195\"/>;\n\n    const cs173URL = \"https://cs.brown.edu/courses/cs173/2019/\";\n    const cs173 = <Link href={cs173URL} name=\"CS173\"/>;\n\n    const cs147URL = \"http://cs.brown.edu/courses/csci1470/\";\n    const cs147 = <Link href={cs147URL} name=\"CS147\"/>;\n\n    const weiboURL = \"https://docs.google.com/document/d/10bVrTpSnOpZd_E_Yxo_dPzL3NomuoLVy6RFqoq2fkvY/edit\";\n    const weibo = <Link href={weiboURL} name=\"Here\"/>;\n    \n    const bprURL = \"http://www.brownpoliticalreview.org/2018/11/microscopic-threat-massive-implications-2/\";\n    const bpr = <Link href={bprURL} name=\"This\"/>;\n    \n    const ginaURL = \"https://docs.google.com/document/d/1A-n8qFPaKBc0LG8uwj_vJJoxYGgA_D8S08ddCpLd_dA/edit\";\n    const gina = <Link href={ginaURL} name=\"This\"/>;\n    \n    //Get the style\n    const currPage = this.props.currPage;\n    const MainStyle = getMainStyle(1, currPage);\n    \n    return (\n      <div style={MainStyle}>\n        <p style={Styles.Text.Header}>Technical Skills</p>\n        <p style={Styles.Text.Body}>\n          I am proficient in Java and Python, as well as\n          frontend web applications using HTML5, CSS, JavaScript,\n          and contemporary web technologies like ReactJS. I am familiar with C,\n          and am independently learning Haskell and SQL. I am versed in\n          Object Oriented and Functional Programming best practices as well as full \n          stack design for applications. In my classes, I have come into frequent\n          contact with academic languages, including Formal Verification using \n          Dafny and Alloy and Language Design using Racket. \n        </p>\n        <p style={Styles.Text.Header}>(Relevant) Classes I've Taken</p>\n        <p style={Styles.Text.Body}>\n          In Computer Science, I've studied Functional Programming and basic \n          data structures in ({cs19}), the low level structure of computer \n          systems in ({cs33}), software engineering principles in ({cs32}), \n          and Formal Verification methods in ({cs195}). I am currently taking\n          ({cs173}), a class on programming language design, and ({cs147}), \n          an introduction to Deep Learning.\n        </p>\n        <p style={Styles.Text.Header}>Work Experience</p>\n        <p style={Styles.Text.Body}>\n          I spent the last summer as an intern at IPlytics GmbH, an intellectual property\n          intelligence company that aggregated global patent data, analyzed it, and provided\n          insights using an online platform. I worked with the company while it was transitioning\n          towards continuous integration, and I helped build out the neccesary pipelines, \n          developing a frontend testing suite based on Selenium and Java 8 that allowed testers to write \n          simple, declarative walkthroughs modeling user behavior on the platform, with a focus on ensuring \n          test stability on inconsistent browsers without sacrificing the speed of the testing suite. \n        </p>\n        <p style={Styles.Text.Header}>Teaching Experience</p>\n        <p style={Styles.Text.Body}>\n          I was an undergraduate teaching assistant for ({cs32}), where I contributed to\n          course design, graded projects, held hours, and mentored two student teams in developing\n          their own independent final project.\n        </p>\n        <p style={Styles.Text.Header}>Some Writing</p>\n        <p style={Styles.Text.Body}>\n          I wrote a research paper on surveillance in Xinjiang, concerning the detention of \n          Uyghur minorities in the reigon. The bulk of the tecnical work involved web scraping \n          censored posts from the Chinese social media site Weibo, and analyzing them qualitatively \n          to uncover narratives of detention in the mainland China. You can find the peice ({weibo}).\n          If you want to read some of my journalistic writing, check out ({bpr}) piece for the Brown \n          Political Review on the global Tuberculosis epidemic, or ({gina}) unpublished academic piece \n          on the Station nightclub fire in Rhode Island.\n        </p>\n        <p style={Styles.Text.Header}>Outside Interests</p>\n        <p style={Styles.Text.Body}>\n          I am an Outdoor Guide by training, with WFA and CPR certifications as \n          well as significant experience leading technical outings, mostly Rock \n          Climbing, Skiing, and Backpacking trips. I am currently a leader for the Brown \n          Outing Club, running outdoor trips and education for the greater Brown \n          community.\n        </p>\n      </div>\n    );\n  }\n}\n\nclass Stuff extends Component {\n  render() {  \n    //Set up media embedding\n    const spotifyURL = \"https://open.spotify.com/embed/user/12133708412/playlist/3pf7cfPm73EO3gd0mjmouk\";\n    \n    const youtubeURL = \"https://www.youtube.com/embed/ZRTNHDd0gL8\";\n    const youtubeAllows = \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\";\n    \n    //Set up links\n    const nytRecipieURL = \"https://cooking.nytimes.com/recipes/1019772-spiced-chickpea-stew-with-coconut-and-turmeric\";\n    const nytRecipieImage = \"https://static01.nyt.com/images/2018/11/28/dining/28Romanrex1/merlin_143092557_a19cb00a-d1f1-4d42-83be-e4ac865d2f96-articleLarge.jpg\";\n    const nytRecipieAlt = \"spiced chickpea stew\";\n    const rel = \"noopener noreferrer\";\n    const target = \"_blank\";\n    \n    //Get the style\n    const currPage = this.props.currPage;\n    const MainStyle = getMainStyle(2, currPage);\n    \n    return(\n      <div style={MainStyle}>\n        <p style={Styles.Text.Medium}>\n          This video of Adam Ondra\n        </p>\n        <div \n          style={{maxWidth: \"100%\"}}>\n          <iframe \n            title=\"youtube\" \n            width=\"560\" \n            height=\"315\" \n            src={youtubeURL}\n            frameBorder=\"0\" \n            allow={youtubeAllows}\n            allowFullScreen>\n          </iframe>\n        </div>\n        <br></br>\n        <br></br>\n        <p style={Styles.Text.Medium}>\n          This Spotify playlist\n        </p>\n        <div>\n          <iframe \n            title=\"spotify\" \n            width=\"300\" \n            height=\"380\" \n            src={spotifyURL}\n            frameBorder=\"0\" \n            allowtransparency=\"true\" \n            allow=\"encrypted-media\">\n          </iframe>\n        </div>\n        <br></br>\n        <br></br>\n        <p style={Styles.Text.Medium}>\n          This recipe from the New York Times\n        </p>\n        <a href={nytRecipieURL} rel={rel} target={target}>\n          <img style={{maxWidth: \"100%\"}} src={nytRecipieImage} alt={nytRecipieAlt}/>\n        </a>\n        <br></br>\n        <br></br>\n        <p style={Styles.Text.Medium}>\n          More coming!\n        </p>\n        <br></br>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      width: 0,\n      currPage: 0,\n    }  \n  }\n  \n  //Handle resizing for small screens\n  updateAppWidth = () => {\n    console.log(\"firing\");\n    this.setState(Object.assign(this.state, {width: window.innerWidth}));\n  }\n  \n  componentDidMount(){\n    this.updateAppWidth();\n  }\n  \n  updatePage = (index) => {\n    this.setState(Object.assign(this.state, {currPage: index}));\n  } \n  \n  render() {\n    //The pages for the navigation menu (sidebar)\n    const pages = [\"who is that\", \"curriculum vitae\", \"things I like\"];\n    \n    //The page that is currently selected\n    const currPage = this.state.currPage;\n    \n    //What to do on page update\n    const updatePage = this.updatePage;\n    \n    //The title to display\n    const title = \"(Nicholas) Kiran Merchant\";\n    \n    //Get the current page\n    //const main = this.getPage();\n    \n    //Check the page width! (could do this with global context)\n    const width = this.state.width;\n    let Style, small;\n     if (width <= 375) {\n       Style = Styles.SmallApp;\n       small = true;\n     } else{\n       Style = Styles.App;\n       small = false;\n     }\n    \n    return (\n      <div style={Style}>\n        {/*Color the top corner*/}\n        <div style={Styles.Corner}></div>\n        \n        {/*Our sidebar*/}\n        <Sidebar \n          updatePage={updatePage} \n          pages={pages} \n          currPage={currPage}\n          small={small}>\n        </Sidebar>\n        \n        {/*My name!*/}\n        <Title title={title} />\n        \n        {/*Whatever main page is selected*/}\n        <Who currPage={currPage} />\n        <CV currPage={currPage} />\n        <Stuff currPage={currPage} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}